/// <reference types="node" />
import { ActionConfigInterface } from "../types/ActionConfigInterface";
import { InputsStore } from "./InputsStore";
import { PathLike } from "fs";
import { RunnerWarning } from "../runResult/warnings/RunnerWarning";
/**
 * You can specify an action config by setting an ActionConfigInterface config object or
 * by passing a string pointing to config file path.
 */
export type ActionConfigSource = ActionConfigInterface | string;
export type ActionConfigStoreFilled = ActionConfigStore<ActionConfigInterface>;
export type ActionConfigStoreOptional = ActionConfigStore<ActionConfigInterface | undefined>;
export type ActionConfigStoreEmpty = ActionConfigStore<undefined>;
export declare class ActionConfigStore<D extends ActionConfigInterface | undefined> {
    protected _data: D;
    protected constructor(_data: D);
    static create(configSource: ActionConfigSource | undefined, required: true): ActionConfigStoreFilled;
    static create(configSource: ActionConfigSource | undefined, required: false): ActionConfigStoreOptional;
    static fromFile(filePath: PathLike): ActionConfigStoreFilled;
    static fromObject(config: any | ActionConfigInterface): ActionConfigStoreFilled;
    static empty(): ActionConfigStoreEmpty;
    isEmpty(): boolean;
    clone(): ActionConfigStore<D>;
    get data(): D;
    getDefaultInputs(): InputsStore;
    getWarnings(): RunnerWarning[];
}
//# sourceMappingURL=ActionConfigStore.d.ts.map