/// <reference types="node" />
/// <reference types="node" />
import { Writable, WritableOptions } from 'stream';
export interface WritableStreamBufferOptions extends WritableOptions {
    initialSize?: number;
    incrementAmount?: number;
}
export declare class WritableStreamBuffer extends Writable {
    private opts;
    private readonly initialSize;
    private readonly incrementAmount;
    private buffer;
    private _size;
    constructor(opts?: WritableStreamBufferOptions);
    size(): number;
    maxSize(): number;
    getContents(length?: number): Buffer | false;
    getContentsAsString(encoding?: BufferEncoding, length?: number): string | false;
    increaseBufferIfNecessary(incomingDataSize: number): void;
    _write(chunk: any, encoding: string, callback: (error?: Error | null) => void): void;
}
//# sourceMappingURL=WritableStreamBuffer.d.ts.map