export declare function mapObjectKeys<ObjV>(obj: {
    [s: string]: ObjV;
}, mapper: (key: string, value: ObjV) => string): {
    [key: string]: ObjV;
};
export declare function mapObjectValues<ObjV, R>(obj: {
    [s: string]: ObjV;
}, mapper: (key: string, value: ObjV) => R): {
    [key: string]: R;
};
export declare function mapObject<SrcK extends string, SrcV, ResK extends string, ResV>(obj: {
    [k in SrcK]: SrcV;
}, mapper: (key: SrcK, value: SrcV) => [ResK, ResV]): {
    [key in ResK]: ResV;
};
export declare function filterObjectKeys<ObjV>(obj: {
    [s: string]: ObjV;
}, filter: (key: string, value: ObjV) => boolean): {
    [key: string]: ObjV;
};
export declare function mapToObject<MapK extends string, MapV, ResK extends string, ResV>(map: Map<MapK, MapV>, mapperFn: (key: MapK, value: MapV) => [ResK, ResV]): {
    [k in ResK]: ResV;
};
//# sourceMappingURL=collections.d.ts.map