import { RunOptions } from "../runOptions/RunOptions";
import { RunnerDirsCollection } from "../githubServiceFiles/RunnerDirsCollection";
import { RunnerDirInterface } from "../githubServiceFiles/runnerDir/RunnerDirInterface";
import { ActionConfigStoreOptional } from "../runOptions/ActionConfigStore";
import { BaseRunnerDirsInterface } from "./BaseRunnerDirsInterface";
import { FakeFilesCollection } from "../githubServiceFiles/FakeFilesCollection";
import { EnvStore } from "../runOptions/EnvStore";
import { BaseRunMilieuComponentsFactoryInterface } from "./BaseRunMilieuComponentsFactoryInterface";
export declare class BaseRunMilieuComponentsFactory implements BaseRunMilieuComponentsFactoryInterface {
    options: RunOptions;
    actionConfig: ActionConfigStoreOptional;
    constructor(options: RunOptions, actionConfig: ActionConfigStoreOptional);
    prepareRunnerDirs(): RunnerDirsCollection<BaseRunnerDirsInterface>;
    prepareFiles(): FakeFilesCollection;
    prepareEnv(fakeFiles: FakeFilesCollection, runnerDirs: RunnerDirsCollection<BaseRunnerDirsInterface>): EnvStore;
    addProcessEnvToEnv(envStore: EnvStore): void;
    addInputsToEnv(envStore: EnvStore): void;
    addStateToEnv(envStore: EnvStore): void;
    addGithubServiceEnvToEnv(envStore: EnvStore): void;
    addGithubContextToEnv(envStore: EnvStore): void;
    addFilesToEnv(envStore: EnvStore, fakeFiles: FakeFilesCollection): void;
    addTempDirToEnv(envStore: EnvStore, dir: RunnerDirInterface): void;
    addWorkspaceDirToEnv(envStore: EnvStore, dir: RunnerDirInterface): void;
    prepareWorkspaceDir(): RunnerDirInterface;
    prepareTempDir(): RunnerDirInterface;
}
//# sourceMappingURL=BaseRunMilieuComponentsFactory.d.ts.map