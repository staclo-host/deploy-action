"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getContainerArgs = exports.InputContainerArg = void 0;
class InputContainerArg {
    constructor(inputName) {
        this.inputName = inputName;
    }
}
exports.InputContainerArg = InputContainerArg;
function getContainerArgs(actionConfig) {
    const args = actionConfig.runs.args;
    if (args === undefined) {
        return [];
    }
    return args.map((arg) => {
        const ghExpression = /^\${{\s+(.*?)\s+}}$/.exec(arg.trim());
        if (ghExpression) {
            const actionInput = /^inputs\.(.+?)$/.exec(ghExpression[1]);
            if (!actionInput) {
                throw new Error('Unsupported github expression: ' + arg);
            }
            if (!actionConfig.inputs ||
                actionConfig.inputs[actionInput[1]] === undefined) {
                throw new Error(`Input ${actionInput[1]} from runs.args is not ` +
                    `listed in inputs section of action.yml file`);
            }
            return new InputContainerArg(actionInput[1]);
        }
        return arg;
    });
}
exports.getContainerArgs = getContainerArgs;
//# sourceMappingURL=getContainerArgs.js.map