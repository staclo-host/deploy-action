import { RunOptions } from "../../../runOptions/RunOptions";
import { ActionConfigStoreOptional } from "../../../runOptions/ActionConfigStore";
import { RunnerDirsCollection } from "../../../githubServiceFiles/RunnerDirsCollection";
import { DockerRunnerDirsInterface } from "./DockerRunnerDirsInterface";
import { BaseRunMilieuComponentsFactory } from "../../../runMilieu/BaseRunMilieuComponentsFactory";
import { FakeRunnerDir } from "../../../githubServiceFiles/runnerDir/FakeRunnerDir";
import { EnvStore } from "../../../runOptions/EnvStore";
import { FakeFilesCollection } from "../../../githubServiceFiles/FakeFilesCollection";
import { StringKeyValueObj } from "../../../types/StringKeyValueObj";
import { DockerRunMilieuComponentsFactoryInterface } from "./DockerRunMilieuComponentsFactoryInterface";
export declare class DockerRunMilieuComponentsFactory implements DockerRunMilieuComponentsFactoryInterface {
    options: RunOptions;
    actionConfig: ActionConfigStoreOptional;
    static readonly DIRS_MOUNTING_POINTS: {
        [k in keyof DockerRunnerDirsInterface]: string;
    };
    protected baseComponentsFactory: BaseRunMilieuComponentsFactory;
    constructor(options: RunOptions, actionConfig: ActionConfigStoreOptional);
    prepareRunnerDirs(): RunnerDirsCollection<DockerRunnerDirsInterface>;
    prepareFiles(fileCommandsDir?: string, githubWorkflowDir?: string): FakeFilesCollection;
    prepareEnv(fakeFiles: FakeFilesCollection, runnerDirs: RunnerDirsCollection<DockerRunnerDirsInterface>): EnvStore;
    getVolumes(dirs: RunnerDirsCollection<DockerRunnerDirsInterface>): StringKeyValueObj;
    protected getFakeFileDirName(name: string): keyof DockerRunnerDirsInterface;
    protected addFilesToEnv(envStore: EnvStore, fakeFiles: FakeFilesCollection, runnerDirs: RunnerDirsCollection<DockerRunnerDirsInterface>): void;
    protected addTempDirToEnv(envStore: EnvStore): void;
    protected addWorkspaceDirToEnv(envStore: EnvStore): void;
    protected prepareGithubHomeDir(): FakeRunnerDir;
    protected prepareFileCommandsDir(): FakeRunnerDir;
    protected prepareGithubWorkflowDir(): FakeRunnerDir;
}
//# sourceMappingURL=DockerRunMilieuComponentsFactory.d.ts.map