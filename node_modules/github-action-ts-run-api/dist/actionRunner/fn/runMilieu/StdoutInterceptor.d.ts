import { OutputTransform } from "../../../runOptions/OutputTransform";
import { CommandsStore } from "../../../runResult/CommandsStore";
import { CommandWarning } from "../../../runResult/warnings/RunnerWarning";
export declare class StdoutInterceptor {
    private readonly _printStdout;
    private readonly _stdoutTransformStream;
    private readonly _printStderr;
    private readonly _stderrTransformStream;
    private _stdoutData;
    private _stderrData;
    private readonly _unhook;
    private _commandsCollector;
    static start(printStdout: boolean, stdoutTransform: OutputTransform, printStderr: boolean, stderrTransform: OutputTransform, parseStdoutCommands?: boolean, parseStderrCommands?: boolean): StdoutInterceptor;
    private constructor();
    unHook(): void;
    get interceptedStdout(): string;
    get interceptedStderr(): string;
    finishCommandsParsing(): void;
    get parsedCommands(): CommandsStore;
    get parserWarnings(): CommandWarning[];
    private onStdoutData;
    private onStderrData;
}
//# sourceMappingURL=StdoutInterceptor.d.ts.map