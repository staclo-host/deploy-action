"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.runAsyncFn = exports.runSyncFn = void 0;
const TimeoutDetector_1 = require("./TimeoutDetector");
function runSyncFn(fn, timeoutMs) {
    const timeoutDetector = TimeoutDetector_1.TimeoutDetector.start(timeoutMs);
    try {
        return Object.assign({ error: undefined, fnResult: fn() }, timeoutDetector.measure());
    }
    catch (err) {
        return Object.assign({ error: err, fnResult: undefined }, timeoutDetector.measure());
    }
}
exports.runSyncFn = runSyncFn;
function runAsyncFn(fn, timeoutMs) {
    return __awaiter(this, void 0, void 0, function* () {
        const timeoutDetector = TimeoutDetector_1.TimeoutDetector.start(timeoutMs);
        try {
            return Object.assign({ error: undefined, fnResult: yield fn() }, timeoutDetector.measure());
        }
        catch (err) {
            return Object.assign({ error: err, fnResult: undefined }, timeoutDetector.measure());
        }
    });
}
exports.runAsyncFn = runAsyncFn;
//# sourceMappingURL=runFn.js.map